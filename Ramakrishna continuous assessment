#include <iostream>
#include <string>

class PaymentProcessor {
private:
    int user_id;
    static int fraudulentTransactionsCount; 

public:
    PaymentProcessor(int id) {
        user_id = id;
    }
    void processPayment(double amount, std::string paymentMethod) {
        if (isFraudulent(amount, paymentMethod)) {
            fraudulentTransactionsCount++; 
            std::cout << "Fraud Alert! User " << user_id << "'s transaction was flagged." << std::endl;
        } else {
            std::cout << "Payment of $" << amount << " by User " << user_id << " processed successfully." << std::endl;
        }
    }

    static bool isFraudulent(double amount, std::string paymentMethod) {
        if (amount > 5000) { // If amount is greater than $5000, flag it as fraud
            return true;
        }
        if (paymentMethod == "bitcoin") { // If payment method is Bitcoin, flag it as fraud
            return true;
        }
        return false;
    }
    static int getFraudulentTransactionsCount() {
        return fraudulentTransactionsCount;
    }
};
int PaymentProcessor::fraudulentTransactionsCount = 0;

int main() {
    PaymentProcessor user1(1);
    PaymentProcessor user2(2);

    user1.processPayment(200, "credit_card"); // Normal payment
    user2.processPayment(6000, "paypal"); // Fraudulent payment
    user1.processPayment(50, "bitcoin"); // Fraudulent payment

    std::cout << "Total Fraudulent Transactions: " << PaymentProcessor::getFraudulentTransactionsCount() << std::endl;

    return 0;
}
